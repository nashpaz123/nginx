/etc/nginx/
├── nginx.conf
├── conf.d/
│   └── default.conf
├── sites-available/
│   ├── example.com
│   └── another-example.com
├── sites-enabled/
│   └── example.com -> /etc/nginx/sites-available/example.com
└── snippets/
    ├── fastcgi-php.conf
    └── ssl-params.conf

---

#Example Site Configuration (/etc/nginx/sites-available/example.com)
#Activating Site-Specific Configuration
#Create a symbolic link from the site-specific configuration file in sites-available to sites-enabled:

#sudo ln -s /etc/nginx/sites-available/example.com /etc/nginx/sites-enabled/
sudo systemctl reload nginx

server {
    listen 80;  # Listen on port 80 for IPv4 connections.
    listen [::]:80;  # Listen on port 80 for IPv6 connections.

    server_name example.com www.example.com;  # Define the server name (domain).

    root /var/www/example.com;  # Define the root directory for the server.
    index index.html index.htm index.php;  # Define the default file to serve.

    location / {
        try_files $uri $uri/ =404;  # Try to serve the requested file, if it doesn't exist, return a 404 error.
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;  # Include the fastcgi parameters.
        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;  # Define the FastCGI server to pass PHP requests to.
    }

    location ~ /\.ht {
        deny all;  # Block access to .htaccess files.
    }

    add_header X-Content-Type-Options nosniff;  # Additional security headers.
    add_header X-Frame-Options "SAMEORIGIN";  # Prevent clickjacking.
    add_header X-XSS-Protection "1; mode=block";  # Enable XSS protection.

    access_log /var/log/nginx/example.com_access.log;  # Log file locations for the access log.
    error_log /var/log/nginx/example.com_error.log warn;  # Log file locations for the error log.

    # SSL/TLS configuration (uncomment and configure if you have SSL certificates).
    # listen 443 ssl;  # Listen on port 443 for SSL connections.
    # ssl_certificate /etc/ssl/certs/example.com.pem;  # Define the path to the SSL certificate.
    # ssl_certificate_key /etc/ssl/private/example.com.key;  # Define the path to the SSL certificate key.
    # ssl_protocols TLSv1.2 TLSv1.3;  # Specify the SSL/TLS protocols to use.
    # ssl_ciphers HIGH:!aNULL:!MD5;  # Define the ciphers to use for SSL/TLS.
    # ssl_prefer_server_ciphers on;  # Prefer server ciphers over client ciphers.
}

